// <auto-generated />
using System;
using Herbzhub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Herbzhub.Data.Migrations
{
    [DbContext(typeof(DbApplicationContext))]
    partial class DbApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Herbzhub.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountiesId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PersonalIdentificationId")
                        .HasColumnType("integer");

                    b.Property<int>("StateId")
                        .HasColumnType("integer");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountiesId");

                    b.HasIndex("PersonalIdentificationId");

                    b.HasIndex("StateId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.AuditFeedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageRating")
                        .HasColumnType("double precision");

                    b.Property<string>("ComplianceAuditLog")
                        .HasColumnType("text");

                    b.Property<string>("CustomerFeedback")
                        .HasColumnType("text");

                    b.Property<double?>("CustomerSatisfactionIndex")
                        .HasColumnType("double precision");

                    b.Property<int>("DispensaryId")
                        .HasColumnType("integer");

                    b.Property<string>("LastInspectionDate")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId")
                        .IsUnique();

                    b.ToTable("AuditFeedbacks");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New York City",
                            State = "New York",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5749)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Los Angeles",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5754)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chicago",
                            State = "Illinois",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5755)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Houston",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5756)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Phoenix",
                            State = "Arizona",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5757)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Philadelphia",
                            State = "Pennsylvania",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5759)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Antonio",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5760)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Diego",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5761)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dallas",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5762)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Jose",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5764)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Austin",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5821)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jacksonville",
                            State = "Florida",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5823)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fort Worth",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5824)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Columbus",
                            State = "Ohio",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5825)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Francisco",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5825)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Charlotte",
                            State = "North Carolina",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5827)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Indianapolis",
                            State = "Indiana",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5827)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Seattle",
                            State = "Washington",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5830)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Denver",
                            State = "Colorado",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5831)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Washington",
                            State = "District of Columbia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5832)
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Boston",
                            State = "Massachusetts",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5833)
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "El Paso",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5834)
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nashville",
                            State = "Tennessee",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5834)
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Detroit",
                            State = "Michigan",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5835)
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oklahoma City",
                            State = "Oklahoma",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5836)
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Portland",
                            State = "Oregon",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5837)
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Las Vegas",
                            State = "Nevada",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5838)
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Memphis",
                            State = "Tennessee",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5839)
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Louisville",
                            State = "Kentucky",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5840)
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Baltimore",
                            State = "Maryland",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5841)
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Milwaukee",
                            State = "Wisconsin",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5842)
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Albuquerque",
                            State = "New Mexico",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5843)
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tucson",
                            State = "Arizona",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5844)
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fresno",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5845)
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sacramento",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5846)
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kansas City",
                            State = "Missouri",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5847)
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Long Beach",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5848)
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mesa",
                            State = "Arizona",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5849)
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlanta",
                            State = "Georgia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5850)
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Colorado Springs",
                            State = "Colorado",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5851)
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Virginia Beach",
                            State = "Virginia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5851)
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Raleigh",
                            State = "North Carolina",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5852)
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Omaha",
                            State = "Nebraska",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5853)
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Miami",
                            State = "Florida",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5854)
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oakland",
                            State = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5855)
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Minneapolis",
                            State = "Minnesota",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5856)
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tulsa",
                            State = "Oklahoma",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5857)
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wichita",
                            State = "Kansas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5858)
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Orleans",
                            State = "Louisiana",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5859)
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arlington",
                            State = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5860)
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.ContactInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessCity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessZipCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DispensaryId")
                        .HasColumnType("integer");

                    b.Property<string>("OperatingHour")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SocialMediaProfiles")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId")
                        .IsUnique();

                    b.ToTable("ContactInformations");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Counties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Counties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adair"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Andrew"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Atchison"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Audrain"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Barry"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Barton"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Bates"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Benton"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Bollinger"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Boone"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Buchanan"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Butler"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Caldwell"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Callaway"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Camden"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Cape Girardeau"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Carroll"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Carter"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Cass"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Cedar"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Chariton"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Christian"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Clark"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Clay"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Clinton"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Cole"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Cooper"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Crawford"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Dade"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Dallas"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Daviess"
                        },
                        new
                        {
                            Id = 32,
                            Name = "DeKalb"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Dent"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Douglas"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Dunklin"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Franklin"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Gasconade"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Gentry"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Greene"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Grundy"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Harrison"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Henry"
                        },
                        new
                        {
                            Id = 43,
                            Name = "Hickory"
                        },
                        new
                        {
                            Id = 44,
                            Name = "Holt"
                        },
                        new
                        {
                            Id = 45,
                            Name = "Howard"
                        },
                        new
                        {
                            Id = 46,
                            Name = "Howell"
                        },
                        new
                        {
                            Id = 47,
                            Name = "Iron"
                        },
                        new
                        {
                            Id = 48,
                            Name = "Jackson"
                        },
                        new
                        {
                            Id = 49,
                            Name = "Jasper"
                        },
                        new
                        {
                            Id = 50,
                            Name = "Jefferson"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Johnson"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Knox"
                        },
                        new
                        {
                            Id = 53,
                            Name = "Laclede"
                        },
                        new
                        {
                            Id = 54,
                            Name = "Lafayette"
                        },
                        new
                        {
                            Id = 55,
                            Name = "Lawrence"
                        },
                        new
                        {
                            Id = 56,
                            Name = "Lewis"
                        },
                        new
                        {
                            Id = 57,
                            Name = "Lincoln"
                        },
                        new
                        {
                            Id = 58,
                            Name = "Linn"
                        },
                        new
                        {
                            Id = 59,
                            Name = "Livingston"
                        },
                        new
                        {
                            Id = 60,
                            Name = "Macon"
                        },
                        new
                        {
                            Id = 61,
                            Name = "Madison"
                        },
                        new
                        {
                            Id = 62,
                            Name = "Maries"
                        },
                        new
                        {
                            Id = 63,
                            Name = "Marion"
                        },
                        new
                        {
                            Id = 64,
                            Name = "McDonald"
                        },
                        new
                        {
                            Id = 65,
                            Name = "Mercer"
                        },
                        new
                        {
                            Id = 66,
                            Name = "Miller"
                        },
                        new
                        {
                            Id = 67,
                            Name = "Mississippi"
                        },
                        new
                        {
                            Id = 68,
                            Name = "Moniteau"
                        },
                        new
                        {
                            Id = 69,
                            Name = "Monroe"
                        },
                        new
                        {
                            Id = 70,
                            Name = "Montgomery"
                        },
                        new
                        {
                            Id = 71,
                            Name = "Morgan"
                        },
                        new
                        {
                            Id = 72,
                            Name = "New Madrid"
                        },
                        new
                        {
                            Id = 73,
                            Name = "Newton"
                        },
                        new
                        {
                            Id = 74,
                            Name = "Nodaway"
                        },
                        new
                        {
                            Id = 75,
                            Name = "Oregon"
                        },
                        new
                        {
                            Id = 76,
                            Name = "Osage"
                        },
                        new
                        {
                            Id = 77,
                            Name = "Ozark"
                        },
                        new
                        {
                            Id = 78,
                            Name = "Pemiscot"
                        },
                        new
                        {
                            Id = 79,
                            Name = "Perry"
                        },
                        new
                        {
                            Id = 80,
                            Name = "Pettis"
                        },
                        new
                        {
                            Id = 81,
                            Name = "Phelps"
                        },
                        new
                        {
                            Id = 82,
                            Name = "Pike"
                        },
                        new
                        {
                            Id = 83,
                            Name = "Platte"
                        },
                        new
                        {
                            Id = 84,
                            Name = "Polk"
                        },
                        new
                        {
                            Id = 85,
                            Name = "Pulaski"
                        },
                        new
                        {
                            Id = 86,
                            Name = "Putnam"
                        },
                        new
                        {
                            Id = 87,
                            Name = "Ralls"
                        },
                        new
                        {
                            Id = 88,
                            Name = "Randolph"
                        },
                        new
                        {
                            Id = 89,
                            Name = "Ray"
                        },
                        new
                        {
                            Id = 90,
                            Name = "Reynolds"
                        },
                        new
                        {
                            Id = 91,
                            Name = "Ripley"
                        },
                        new
                        {
                            Id = 92,
                            Name = "St. Charles"
                        },
                        new
                        {
                            Id = 93,
                            Name = "St. Clair"
                        },
                        new
                        {
                            Id = 94,
                            Name = "St. Francois"
                        },
                        new
                        {
                            Id = 95,
                            Name = "St. Louis"
                        },
                        new
                        {
                            Id = 96,
                            Name = "Ste. Genevieve"
                        },
                        new
                        {
                            Id = 97,
                            Name = "Saline"
                        },
                        new
                        {
                            Id = 98,
                            Name = "Schuyler"
                        },
                        new
                        {
                            Id = 99,
                            Name = "Scotland"
                        },
                        new
                        {
                            Id = 100,
                            Name = "Scott"
                        },
                        new
                        {
                            Id = 101,
                            Name = "Shannon"
                        },
                        new
                        {
                            Id = 102,
                            Name = "Shelby"
                        },
                        new
                        {
                            Id = 103,
                            Name = "Stoddard"
                        },
                        new
                        {
                            Id = 104,
                            Name = "Stone"
                        },
                        new
                        {
                            Id = 105,
                            Name = "Sullivan"
                        },
                        new
                        {
                            Id = 106,
                            Name = "Taney"
                        },
                        new
                        {
                            Id = 107,
                            Name = "Texas"
                        },
                        new
                        {
                            Id = 108,
                            Name = "Vernon"
                        },
                        new
                        {
                            Id = 109,
                            Name = "Warren"
                        },
                        new
                        {
                            Id = 110,
                            Name = "Washington"
                        },
                        new
                        {
                            Id = 111,
                            Name = "Wayne"
                        },
                        new
                        {
                            Id = 112,
                            Name = "Webster"
                        },
                        new
                        {
                            Id = 113,
                            Name = "Worth"
                        },
                        new
                        {
                            Id = 114,
                            Name = "Wright"
                        },
                        new
                        {
                            Id = 115,
                            Name = "City of St. Louis"
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "United States",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5112)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Canada",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5118)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "United Kingdom",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5119)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nigeria",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5119)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Togo",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5120)
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CustomerId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EmergencyContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmergencyContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomePhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SecondaryEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WorkPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CustomerAuditId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AccountVerified")
                        .HasColumnType("boolean");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastOrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAudits");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerLegalDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("GovernmentIdNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("GovernmentIdProof")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("GovernmentIdType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("IdProof")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("MedicalMarijuanaCard")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Prescription")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerLegalDocuments");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerMedicalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CustomerMedicalInformationId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Allergies")
                        .HasColumnType("text");

                    b.Property<DateTime>("CardExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CurrentMedication")
                        .HasColumnType("text");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("DoctorContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KnownHealthIssues")
                        .HasColumnType("text");

                    b.Property<string>("MedicalCondition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MedicalMarijuanaCardNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhysicianContact")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryCarePhysician")
                        .HasColumnType("text");

                    b.Property<string>("TreatmentHistory")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerMedicalInformation");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerPreferencesNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("LifestylePreferences")
                        .HasColumnType("text");

                    b.Property<string>("ProductPreferences")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerPreferencesNotes");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Dispensary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AnnualRevenue")
                        .HasColumnType("text");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BusinessType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComplianceStatus")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("DeliveryServiceAvailable")
                        .HasColumnType("boolean");

                    b.Property<string>("EnvironmentalComplianceStatus")
                        .HasColumnType("text");

                    b.Property<string>("FederalLicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("LicenseExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("LincenseUpload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberOfEmployees")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OperatingHours")
                        .HasColumnType("text");

                    b.Property<string>("OwnerContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StateLicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Dispensaries");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DrivingCertification")
                        .HasColumnType("text");

                    b.Property<DateOnly>("LicenseExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LicenseState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.DriverEmploymentDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvailableHours")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BackgroundCheckStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeliveryZone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmploymentContractType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmploymentStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HealthClearanceStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TrainingRecords")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("DriverEmploymentDetails");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.DriverVehicleInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<string>("InsurancePolicyNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VehicleColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VehicleInsuranceExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("VehicleInsuranceProvider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleLicensePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleMake")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleModel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VehicleYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.ToTable("DriverVehicleInformation");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.FinancialInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BankAccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DispensaryId")
                        .HasColumnType("integer");

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId")
                        .IsUnique();

                    b.ToTable("FinancialInformation");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.InventoryManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DispensaryId")
                        .HasColumnType("integer");

                    b.Property<string>("InventoryTrackingSystem")
                        .HasColumnType("text");

                    b.Property<string>("ProductCatalog")
                        .HasColumnType("text");

                    b.Property<string>("SupplierInformation")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId")
                        .IsUnique();

                    b.ToTable("InventoryManagements");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.PersonalIdentification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthenticationEntityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("IDentificationIdUpload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("social_security_number")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationEntityId")
                        .IsUnique();

                    b.ToTable("PersonalIdentifications");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleName = "Manufacturer",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(6028)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleName = "Manufacturer Driver",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(6032)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleName = "Dispensary",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(6033)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleName = "Customer Driver",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(6034)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleName = "Customer",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(6034)
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.SMSVerificationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthenticationEntityId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("verification_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthenticationEntityId")
                        .IsUnique();

                    b.ToTable("SMSVerificationCodes");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.SecurityMeasures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DispensaryId")
                        .HasColumnType("integer");

                    b.Property<string>("EmergencyResponsePlan")
                        .HasColumnType("text");

                    b.Property<string>("HealthSafetyRecords")
                        .HasColumnType("text");

                    b.Property<string>("SecurityMeasuresDetails")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId")
                        .IsUnique();

                    b.ToTable("SecurityMeasures");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "AL",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alabama",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5402)
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "AK",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alaska",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5405)
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "AZ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arizona",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5406)
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "AR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Arkansas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5407)
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "CA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "California",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5408)
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "CO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Colorado",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5411)
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "CT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Connecticut",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5412)
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "DE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Delaware",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5413)
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "FL",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Florida",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5413)
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "GA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Georgia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5415)
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "HI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hawaii",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5416)
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "ID",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Idaho",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5417)
                        },
                        new
                        {
                            Id = 13,
                            Abbreviation = "IL",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Illinois",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5418)
                        },
                        new
                        {
                            Id = 14,
                            Abbreviation = "IN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Indiana",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5419)
                        },
                        new
                        {
                            Id = 15,
                            Abbreviation = "IA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Iowa",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 16,
                            Abbreviation = "KS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kansas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5421)
                        },
                        new
                        {
                            Id = 17,
                            Abbreviation = "KY",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kentucky",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5422)
                        },
                        new
                        {
                            Id = 18,
                            Abbreviation = "LA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Louisiana",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5424)
                        },
                        new
                        {
                            Id = 19,
                            Abbreviation = "ME",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maine",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5426)
                        },
                        new
                        {
                            Id = 20,
                            Abbreviation = "MD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maryland",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5426)
                        },
                        new
                        {
                            Id = 21,
                            Abbreviation = "MA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Massachusetts",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5434)
                        },
                        new
                        {
                            Id = 22,
                            Abbreviation = "MI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Michigan",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5435)
                        },
                        new
                        {
                            Id = 23,
                            Abbreviation = "MN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Minnesota",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5436)
                        },
                        new
                        {
                            Id = 24,
                            Abbreviation = "MS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mississippi",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5437)
                        },
                        new
                        {
                            Id = 25,
                            Abbreviation = "MO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Missouri",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5438)
                        },
                        new
                        {
                            Id = 26,
                            Abbreviation = "MT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Montana",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5439)
                        },
                        new
                        {
                            Id = 27,
                            Abbreviation = "NE",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nebraska",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5439)
                        },
                        new
                        {
                            Id = 28,
                            Abbreviation = "NV",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nevada",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5440)
                        },
                        new
                        {
                            Id = 29,
                            Abbreviation = "NH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Hampshire",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5441)
                        },
                        new
                        {
                            Id = 30,
                            Abbreviation = "NJ",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Jersey",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5442)
                        },
                        new
                        {
                            Id = 31,
                            Abbreviation = "NM",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New Mexico",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5443)
                        },
                        new
                        {
                            Id = 32,
                            Abbreviation = "NY",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "New York",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5444)
                        },
                        new
                        {
                            Id = 33,
                            Abbreviation = "NC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "North Carolina",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5445)
                        },
                        new
                        {
                            Id = 34,
                            Abbreviation = "ND",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "North Dakota",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5447)
                        },
                        new
                        {
                            Id = 35,
                            Abbreviation = "OH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ohio",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5448)
                        },
                        new
                        {
                            Id = 36,
                            Abbreviation = "OK",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oklahoma",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5449)
                        },
                        new
                        {
                            Id = 37,
                            Abbreviation = "OR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Oregon",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5450)
                        },
                        new
                        {
                            Id = 38,
                            Abbreviation = "PA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pennsylvania",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5451)
                        },
                        new
                        {
                            Id = 39,
                            Abbreviation = "RI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rhode Island",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5452)
                        },
                        new
                        {
                            Id = 40,
                            Abbreviation = "SC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "South Carolina",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5452)
                        },
                        new
                        {
                            Id = 41,
                            Abbreviation = "SD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "South Dakota",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5453)
                        },
                        new
                        {
                            Id = 42,
                            Abbreviation = "TN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tennessee",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5454)
                        },
                        new
                        {
                            Id = 43,
                            Abbreviation = "TX",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Texas",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5455)
                        },
                        new
                        {
                            Id = 44,
                            Abbreviation = "UT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Utah",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5456)
                        },
                        new
                        {
                            Id = 45,
                            Abbreviation = "VT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Vermont",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5457)
                        },
                        new
                        {
                            Id = 46,
                            Abbreviation = "VA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Virginia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5458)
                        },
                        new
                        {
                            Id = 47,
                            Abbreviation = "WA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Washington",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5459)
                        },
                        new
                        {
                            Id = 48,
                            Abbreviation = "WV",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "West Virginia",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5460)
                        },
                        new
                        {
                            Id = 49,
                            Abbreviation = "WI",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wisconsin",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5461)
                        },
                        new
                        {
                            Id = 50,
                            Abbreviation = "WY",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wyoming",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 368, DateTimeKind.Utc).AddTicks(5461)
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsMFAEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            HashPassword = "$2a$11$ZcR2lEtiOEf.FhkztFLiAOEaxENdZlk9cJliXG.AegSVEKuDsMyce",
                            IsMFAEnabled = false,
                            MobileNumber = "1234567890",
                            UpdatedAt = new DateTime(2024, 5, 25, 18, 59, 48, 576, DateTimeKind.Utc).AddTicks(899),
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Address", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Counties", "Counties")
                        .WithMany()
                        .HasForeignKey("CountiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbzhub.Data.Models.PersonalIdentification", "PersonalIdentification")
                        .WithMany()
                        .HasForeignKey("PersonalIdentificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbzhub.Data.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Counties");

                    b.Navigation("PersonalIdentification");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.AuditFeedback", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Dispensary", "Dispensary")
                        .WithOne("AuditFeedback")
                        .HasForeignKey("Herbzhub.Data.Models.AuditFeedback", "DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.ContactInformation", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Dispensary", "Dispensary")
                        .WithOne("ContactInformation")
                        .HasForeignKey("Herbzhub.Data.Models.ContactInformation", "DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerAudit", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Customer", "Customer")
                        .WithOne("CustomerAudit")
                        .HasForeignKey("Herbzhub.Data.Models.CustomerAudit", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerLegalDocument", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Customer", "Customer")
                        .WithOne("CustomerLegalDocuments")
                        .HasForeignKey("Herbzhub.Data.Models.CustomerLegalDocument", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerMedicalInformation", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Customer", "Customer")
                        .WithOne("MedicalInformation")
                        .HasForeignKey("Herbzhub.Data.Models.CustomerMedicalInformation", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.CustomerPreferencesNotes", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Customer", "Customer")
                        .WithOne("CustomerPreferencesNotes")
                        .HasForeignKey("Herbzhub.Data.Models.CustomerPreferencesNotes", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Dispensary", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.User", "User")
                        .WithMany("Dispensary")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.DriverVehicleInformation", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Driver", "Driver")
                        .WithMany("DriverVehicleInformation")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.FinancialInformation", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Dispensary", "Dispensary")
                        .WithOne("FinancialInformation")
                        .HasForeignKey("Herbzhub.Data.Models.FinancialInformation", "DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.InventoryManagement", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Dispensary", "Dispensary")
                        .WithOne("InventoryManagement")
                        .HasForeignKey("Herbzhub.Data.Models.InventoryManagement", "DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.PersonalIdentification", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.User", "AuthenticationEntity")
                        .WithOne("personalIdentifications")
                        .HasForeignKey("Herbzhub.Data.Models.PersonalIdentification", "AuthenticationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthenticationEntity");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.SMSVerificationCode", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.User", "authenticationEntity")
                        .WithOne("SMSVerificationCodes")
                        .HasForeignKey("Herbzhub.Data.Models.SMSVerificationCode", "AuthenticationEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("authenticationEntity");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.SecurityMeasures", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Dispensary", "Dispensary")
                        .WithOne("SecurityMeasures")
                        .HasForeignKey("Herbzhub.Data.Models.SecurityMeasures", "DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.UserRole", b =>
                {
                    b.HasOne("Herbzhub.Data.Models.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbzhub.Data.Models.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Customer", b =>
                {
                    b.Navigation("CustomerAudit")
                        .IsRequired();

                    b.Navigation("CustomerLegalDocuments")
                        .IsRequired();

                    b.Navigation("CustomerPreferencesNotes")
                        .IsRequired();

                    b.Navigation("MedicalInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Dispensary", b =>
                {
                    b.Navigation("AuditFeedback")
                        .IsRequired();

                    b.Navigation("ContactInformation")
                        .IsRequired();

                    b.Navigation("FinancialInformation")
                        .IsRequired();

                    b.Navigation("InventoryManagement")
                        .IsRequired();

                    b.Navigation("SecurityMeasures")
                        .IsRequired();
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Driver", b =>
                {
                    b.Navigation("DriverVehicleInformation");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.Role", b =>
                {
                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Herbzhub.Data.Models.User", b =>
                {
                    b.Navigation("Dispensary");

                    b.Navigation("SMSVerificationCodes")
                        .IsRequired();

                    b.Navigation("UserRole");

                    b.Navigation("personalIdentifications")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
